// define the path to the reference file
//params.ref="/scratch/work/courses/BI7653/hw3.2023/hg38/Homo_sapiens.GRCh38.dna_sm.primary_assembly.normalized.fa"

//lets use our own human reference genome from ensembl. it isnt in fasta format appearently. just unzip it
//params.ref="/scratch/rj931/tf_sle_project/Homo_sapiens.GRCh38.dna.primary_assembly.fa"

// lets try the genome from gencode. just needed to be unzipped
params.ref="/scratch/rj931/tf_sle_project/GRCh38.primary_assembly.genome.fa"

//define the directory that contains the index files

params.dir_ref_files='/scratch/work/courses/BI7653/hw3.2023/hg38/'

// path to gtf file for star 

// using this gtf file which came from ensembl. so now we cant use the ensembl gtf
//params.gtf="/scratch/rj931/tf_sle_project/Homo_sapiens.GRCh38.109.chr.gtf.gz"

// lets use the gencode gtf. appearently the gtf flies had to be unzipped also.
params.gtf="/scratch/rj931/tf_sle_project/test_this.gtf"

// define the path to the pair-end reads


params.input= []      
//params.read_f=$read_f
//params.read_r=$read_r

// *_{1,2}*.fastq.gz


// define the path to the text containing the reads names

params.file_names="/scratch/work/courses/BI7653/hw2.2023/week2_fastqs.txt"


// define the executor and resources

process{
executor='slurm'
cpus=10
memory={15.GB*task.attempt}
time={30.min*task.attempt}
withName:fastp{time='1.h'}
withName:star{time='12.h'}
withName:star_align{time='12.h'}
withName:organize{time='3.h'}
withName:collected_bams{time='1.h'}
withName:r_featurecounts {
time='12.h'
container = '/scratch/rj931/containers/r_container.sif'
}




//withName:bg_fastp{time='1.h'}
//withName:bg_bwa{time='3.h'}
}


process.module = "singularity-ce/3.11.0"
singularity.enabled = true
singularity.autoMounts = true
